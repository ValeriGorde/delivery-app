// <auto-generated />
using System;
using Delivery.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Delivery.DAL.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240110135719_AddDefaultData")]
    partial class AddDefaultData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Delivery.DAL.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CargoWeight")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DatePickup")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipientAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipientCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SendersAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SendersCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c55ff5d-cfda-492b-ac13-02c1f17b6e39"),
                            CargoWeight = 35,
                            DatePickup = new DateOnly(2024, 4, 23),
                            RecipientAddress = "ул. Дыбенко д. 11, кв. 103",
                            RecipientCity = "Санкт-Петербург",
                            SendersAddress = "ул. Водная д. 5, кв. 7",
                            SendersCity = "Москва"
                        },
                        new
                        {
                            Id = new Guid("b8528d7f-e4d0-4fb4-bee0-ccfab7642f1c"),
                            CargoWeight = 17,
                            DatePickup = new DateOnly(2024, 2, 29),
                            RecipientAddress = "ул. Смольная д. 22, кв. 11",
                            RecipientCity = "Челябинск",
                            SendersAddress = "ул. Грузчиков д. 1А, кв. 9",
                            SendersCity = "Петрозаводск"
                        },
                        new
                        {
                            Id = new Guid("29ca20e5-2dc8-40f5-ad64-5e681e859da4"),
                            CargoWeight = 55,
                            DatePickup = new DateOnly(2024, 11, 28),
                            RecipientAddress = "ул. Морская д. 66, кв. 6",
                            RecipientCity = "Хабаровск",
                            SendersAddress = "ул. Первомайская д. 4, кв. 111",
                            SendersCity = "Южно-Сахалинск"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
